module Workers
  UNBLOCK_TIMEOUT = 15
  DEAD_TIMEOUT = 30
  
  $redis = Redis.new
  
  class UnblockKeyWorker
    include Sidekiq::Worker
    
    def perform(id)
      #puts "#{id}: UnblockKeyWorker: key does not exist" if id == nil || !$redis.exists(id.to_s)
      if id != nil && $redis.exists(id.to_s)
        key = JSON.parse($redis.get(id.to_s))
        if key["blocked_timestamp"] != nil
          if Time.new(key["blocked_timestamp"]) + UNBLOCK_TIMEOUT <= Time.now
            puts "#{id}: UnblockKeyWorker: timeout"
            key["is_blocked"] = false
            key["blocked_timestamp"] = nil
            $redis.set(id.to_s, key.to_json)
            available = JSON.parse($redis.get("available"))
            available.push(id)
            $redis.set("available", available)
          else
            puts "#{id}: UnblockKeyWorker: No timeout"
          end
        end
      else
        puts "#{id}: UnblockKeyWorker: key does not exist"
      end
    end
  end
  
  class DeadKeyWorker
    include Sidekiq::Worker
    
    def perform(id)
      if id != nil && $redis.exists(id.to_s)
        key = JSON.parse($redis.get(id.to_s))
        if Time.new(key["keep_alive_timestamp"]) + DEAD_TIMEOUT <= Time.now
          puts "#{id}: DeadKeyWorker: timeout!"
          key["is_dead"] = true
          $redis.set(id.to_s, key.to_json)
          $redis.del(id.to_s)
        end
      else
        puts "#{id}: DeadKeyWorker: key does not exist"
      end
    end
  end
end